<?php

class Rochak_order_model extends CI_Model
{
    function __construct()
    {
        parent::__construct();
    }
    
    /***************************************** MOBILE API MODULE *****************************************/
    
    function get_exist_product_in_cart($data)
    {
        //return $this->db->get_where('order_cart',$data)->num_rows();
        $query      =   $this->db->get_where('order_cart',$data);
        $numRows    =   $query->num_rows();
        
        return $numRows;
    }
    
    function add_new_to_cart($data)
    {
        $this->db->insert('order_cart',$data);
        $insert_id = $this->db->insert_id();

        return  $insert_id;
    }
    
    function update_cart_data($data, $id)
    {
        $this->db->where('cartId',$id);
        $this->db->update('order_cart',$data);
        
        return $this->db->affected_rows();
    }
    
    function delete_cart_data($data)
    {
        $this->db->where($data);
        $this->db->delete('order_cart');        
        return $this->db->affected_rows();
    }
    
    function get_cart_list($data)
    {
        $this->db->select('         
            `package_items`.`item_name`, 
            `package_size`.`package_size_name`, 
            `package_mode`.`package_name`, 
            `order_cart`.`cartItemId`, 
            `order_cart`.`cartId`, 
            `order_cart`.`cartQuantity`, 
            `order_cart`.`itemPrice`, 
            `order_cart`.`cartPrice`
        ');
        $this->db->from('`order_cart`');
        //$this->db->join('`users`', '`users`.`usrId` = `order_cart`.`salesUserId`');
        //$this->db->join('`distributors`', '`distributors`.`distributorId` = `order_cart`.`distributorId`');
        $this->db->join('`package_items`', '`package_items`.`pckg_id` = `order_cart`.`cartItemId`');
        $this->db->join('`package_size`', '`package_size`.`pckg_size_id` = `package_items`.`package_size`');
        $this->db->join('`package_mode`', '`package_mode`.`pckg_mode_id` = `package_items`.`mode_of_package`');
        $this->db->where('order_cart.distributorId', $data['distributorId']);
        $this->db->where('order_cart.salesUserId', $data['salesUserId']);
        $this->db->order_by('`order_cart`.`cartId`', "ASC");
        
        $query = $this->db->get();
        
        //return $this->db->last_query();
        //echo $this->db->last_query();die();
        
        $resultArray    =   $query->result_array();
        if($query->num_rows() > 0){
            //print_r($resultArray);
            return $resultArray;
            //return json_encode($resultArray);
        }
        else{
            return $query->num_rows();
        }
        
    }
    
    function get_cart_count_items($data)
    {
        $where  =   $data;
        
        $this->db->select('`cartItemId`');
        $this->db->from('`order_cart`');
        $this->db->where($where);
        $query          =   $this->db->get();
        if($query->num_rows() > 1){
            return $query->num_rows();
        }
        else{
            return $query->num_rows();
        }
    }
    
    function get_cart_items($data)
    {
        $where  =   $data;
        
        $this->db->select('`salesUserId`, `distributorId`, `cartItemId`, `cartQuantity`, `itemPrice`, `cartPrice`');
        //$this->db->select('*');
        $this->db->from('order_cart');
        $this->db->where($where);
        $query          =   $this->db->get();
        //echo $this->db->last_query();die();
        
        if($query->num_rows() > 0){
            return  $query->result_array();
        }
        else{
            return  false;
        }
    }
    
    function get_cart_total_price($data)
    {
        $where  =   $data;
        
        $this->db->select_sum('cartPrice');
        $this->db->from('order_cart');
        $this->db->where($where);
        $query = $this->db->get();
        
        if($query->num_rows() > 0){
            return  $query->row()->cartPrice;
        }
        else{
            return  false;
        }
    }
    
    function insert_order_master($data)
    {
        $this->db->insert('order_master',$data);
        $insert_id = $this->db->insert_id();

        return  $insert_id;
    }
    
    function insert_order_history($cartList,$masterId)
    {
        $orderId['orderId']     =   $masterId;        
        foreach($cartList as $list){            
            $list   =   array_merge($list,$orderId);
            $this->db->insert('`order_history`',$list);            
        }
        $insert_id = $this->db->insert_id();
        return  $insert_id;
    }
    
    function flush_cart_items($data)
    {
        $this->db->where($data);
        $this->db->delete('order_cart');        
        return $this->db->affected_rows();
        //print_r($data);
    }
    
    function get_order_history($data)
    {
        $this->db->select('
            `order_master`.`orderId`,
            `distributors`.`distributorName` AS distributor,
            `order_master`.`noOfItemsOder` AS noOfItems,
            `order_master`.`ordertotal`,
            `order_master`.`createdat` AS orderDate
        ');
        $this->db->from('`order_master`');
        $this->db->join('`distributors`', '`distributors`.`distributorId` = `order_master`.`distributorId`');
        //$this->db->where('order_master.distributorId', $data['distributorId']);
        $this->db->where('order_master.salesUserId', $data['salesUserId']);
        $this->db->order_by('`order_master`.`orderId`', "ASC");
        
        $query = $this->db->get();
        
        if($query->num_rows() > 0){
            return json_encode($query->result_array());
        }
        else{
            return $query->num_rows();
        }
    }
    
    function get_order_details($data)
    {
        $this->db->select('
            `order_history`.`subOrderId` AS `orderId`,
            `package_items`.`item_name`, 
            `package_mode`.`package_name` AS `package`,
            `package_size`.`package_size_name` AS `size`,             
            `order_history`.`cartQuantity` AS `quantity`,
            `order_history`.`itemPrice` AS `price`,
            `order_history`.`cartPrice` AS `totalPrice`,
            `order_history`.`createdAt` AS `orderDate`
        ');
        $this->db->from('`order_history`');
        $this->db->join('`package_items`', '`package_items`.`pckg_id` = `order_history`.`cartItemId`');
        $this->db->join('`package_size`', '`package_size`.`package_size_name` = `package_items`.`package_size`');
        $this->db->join('`package_mode`', '`package_mode`.`pckg_mode_id` = `package_items`.`mode_of_package`');
        $this->db->where('order_history.distributorId', $data['distributorId']);
        $this->db->where('order_history.salesUserId', $data['salesUserId']);
        $this->db->order_by('`order_history`.`subOrderId`', "ASC");
        
        $query = $this->db->get();
        
        if($query->num_rows() > 0){
            return json_encode($query->result_array());
        }
        else{
            return $query->num_rows();
        }
    }
    
    /***************************************** MOBILE API MODULE *****************************************/
    
}