<?php
/* 
 * Generated by CRUDigniter v2.1 Beta 
 * www.crudigniter.com
 */
 
class Venue_model extends CI_Model
{
    function __construct()
    {
        parent::__construct();
    }

    public function get_venue_duplicate($params)
    {
        $this->db->where('venShortName',$params['venShortName']);
        $query=$this->db->get('venues');
        $c=$query->num_rows(); 
        if($c>0){
            return true;
        }
        else{
            return false; 
        }
    }

    public function get_exist_in_user_unit($id)
    {
        $this->db->where('usruUnitId',$id);
        $query=$this->db->get('user_units');
        $c=$query->num_rows(); 
        if($c>0){
            return true;
        }
        else{
            return false; 
        }
    }

    public function get_update_venue_duplicate($id, $params)
    {
        $this->db->where('venShortName',$params['venShortName']);
        $this->db->where_not_in('venId', $id);
        $query=$this->db->get('venues');
        $c=$query->num_rows(); 
        if($c>0){
            return true;
        }
        else{
            return false; 
        }
    }

    public function add_venue($params) {
        if($this->db->insert('venues', $params)) {
            $insert_id = $this->db->insert_id();
            $data['venCode'] = 'LNSER00' . $insert_id;
            $this->db->where('venId', $insert_id);
            $this->db->update('venues', $data);
            return true;
        } else {
            return false;
        }
    }


    public function get_all_venues()
    {
        $this->db->select('*');
        $this->db->from('venues');
        $this->db->join('units', 'units.untId = venues.venUnitId');
        $query=$this->db->get();
        return $query->result_array();
    }

    public function get_all_user_units($id)
    {
        $this->db->select('*');
        $this->db->from('user_units');
        $this->db->where('usruUserId',$id);
        $query=$this->db->get();
        foreach ($query->result_array() as $id)
        {
            $ids[] = $id['usruUnitId'];
        }
        return $ids;
    }

    public function get_all_user_venues($id, $units)
    {
        $this->db->select('*');
        $this->db->from('venues');
        $this->db->join('units', 'units.untId = venues.venUnitId');
        $this->db->where_in('venues.venUnitId',$units);
        $query=$this->db->get();
        return $query->result_array();
    }


    public function update_status($id, $params)
    {
        $this->db->where('venId',$id);
        $this->db->update('venues',$params);

        if($this->db->affected_rows() == '1'){
            return true;
        }else{
            return false;
        }
    }

    public function get_venue_data($params)
    {
        return $this->db->get_where('venues',$params)->row_array();
    }


    public function update_venue($id, $params)
    {
        $this->db->where('venId',$id);
        $this->db->update('venues',$params);
    }

    

}
