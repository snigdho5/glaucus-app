<?php
/* 
 * Generated by CRUDigniter v2.1 Beta 
 * www.crudigniter.com
 */
 
class Customersreport_model extends CI_Model
{
    function __construct()
    {
        parent::__construct();
    }


    public function get_customer_reports($params, $parent_path)
    {
        $this->db->select('*');
        $this->db->from('customers');
        if($params['adminId']==0){
            $this->db->like('cusParentPath', $parent_path, 'after');
        }else{
            $this->db->like('cusParentPath', $params['adminPath'], 'after'); 
        }

        if($params['userId']!=0){
            $this->db->where('cusManageId',$params['userId']);
        }
        if($params['customerTypeId']!=0){
            $this->db->where('cusCustomerTypeId',$params['customerTypeId']);
        }
        if($params['industryTypeId']!=0){
            $this->db->where('cusIndustryTypeId',$params['industryTypeId']);
        }
        if($params['companyId']!=0){
            $this->db->where('cusCompanyName',$params['companyName']);
        }
        if($params['areaId']!=0){
            $this->db->where('cusArea',$params['areaName']);
        }
        if($params['dob']!=""){
            $this->db->where('cusDOB',$params['dob']);
        }
        if($params['doa']!=""){
            $this->db->where('cusDOA',$params['doa']);
        }

        
        $query=$this->db->get();
        return $query->result_array();
    }

    public function get_all_user_units($id)
    {
        $this->db->select('*');
        $this->db->from('user_units');
        $this->db->join('units', 'units.untId = user_units.usruUnitId');
        $this->db->where('user_units.usruUserId',$id);
        $query=$this->db->get();
        return $query->result_array();
    }


    public function get_all_units()
    {
        $this->db->select('*');
        $this->db->from('units');
        $query=$this->db->get();
        return $query->result_array();
    }


    public function get_all_unit_venues($id)
    {
        $this->db->select('*');
        $this->db->from('venues');
        $this->db->join('units', 'units.untId = venues.venUnitId');
        if($id!=0){
            $this->db->where('venues.venUnitId',$id);
        }
        $query=$this->db->get();
        return $query->result_array();
    }


    public function get_all_customer_types()
    {
        return $this->db->get('customer_types')->result_array();
    }

    public function get_all_customer_types_report()
    {
        $this->db->select('*');
        $this->db->from('customers');
        $this->db->join('customer_types', 'customer_types.custId = customers.cusCustomerTypeId');
        $this->db->group_by('customers.cusCustomerTypeId');
        $query=$this->db->get();
        return $query->result_array();
    }

    public function get_all_industry_types()
    {
        return $this->db->get('industry_types')->result_array();
    }

    public function get_all_industry_types_report()
    {
        $this->db->select('*');
        $this->db->from('customers');
        $this->db->join('industry_types', 'industry_types.indtId = customers.cusIndustryTypeId');
        $this->db->group_by('customers.cusIndustryTypeId');
        $query=$this->db->get();
        return $query->result_array();
    }


    public function get_all_companies()
    {
        return $this->db->get('companies')->result_array();
    }

    public function get_all_companies_report()
    {
        $this->db->select('*');
        $this->db->from('customers');
        $this->db->join('companies', 'companies.cmpName = customers.cusCompanyName');
        $this->db->group_by('customers.cusCompanyName');
        $query=$this->db->get();
        return $query->result_array();
    }

    public function get_all_areas()
    {
        return $this->db->get('areas')->result_array();
    }

    public function get_all_areas_report()
    {
        $this->db->select('*');
        $this->db->from('customers');
        $this->db->join('areas', 'areas.areaName = customers.cusArea');
        $this->db->group_by('customers.cusArea');
        $query=$this->db->get();
        return $query->result_array();
    }


    public function get_all_admins($parent_path)
    {

        $this->db->select('child.*, parent.usrUserName parentName');
        $this->db->from('users as child');
        $this->db->like('child.usrParentPath', $parent_path, 'after');
        $this->db->join('users as parent', 'parent.usrId = child.usrParentId');
        $this->db->where('child.usrTypeName','admin');
        $query=$this->db->get();
        return $query->result_array();
    }


    public function get_all_admin_users($parent_path, $id)
    {
        $this->db->select('child.*, parent.usrUserName parentName');
        $this->db->from('users as child');
        $this->db->like('child.usrParentPath', $parent_path, 'after');
        $this->db->join('users as parent', 'parent.usrId = child.usrParentId');
        $this->db->where('child.usrTypeName','appuser');
        if($id!=0){
            $this->db->where('child.usrParentId',$id);
        }
        $query=$this->db->get();
        return $query->result_array();
    }


    function get_all_customer_meetings($id)
    {
        $this->db->select('*, parent.usrUserName parentName, user.usrUserName userName');
        $this->db->from('meetings');
        $this->db->join('customers', 'customers.cusId = meetings.mtnCustomerId');
        $this->db->join('users as user', 'user.usrId = meetings.mtnUserId');
        $this->db->join('users as parent', 'parent.usrId = meetings.mtnParentId');
        $this->db->where('meetings.mtnCustomerId',$id);
        $this->db->order_by('meetings.mtnDate desc, meetings.mtnTime desc');
        $query=$this->db->get();
        return $query->result_array();
    }

    

}
