<?php
defined('BASEPATH') OR exit('No direct script access allowed');

class Loginreport extends CI_Controller {

    function __construct()
    {
        parent::__construct();	
        $this->load->model('Loginreport_model');	
        $this->load->model('App_user_model');
        $this->load->helper('url');
        $this->load->helper('form');
        define('GOOGLE_MAP_API_KEY', "AIzaSyCTNEZO6ODA9x9z0MDb9fPGSgtYI0mqvUo");
	} 

	public function index(){
		if (isset($this->session->userdata['logged_web_user'])){

			$this->load->view('include/dashboard_header');
			$this->load->view('reports/login_report');

		}else{
			redirect('/login');
		}		
	}
    //Get Location by Soumyajeet
    public function addressFromLatLong($lat, $lng){
        $address 	= 	"";
        // $apiKey 	= 	"AIzaSyDLzEQ6FcQtf9oZNBsDLf_trm_RCto_IJg";
        $apiKey 	= 	GOOGLE_MAP_API_KEY;
        $url 		= 	"https://maps.googleapis.com/maps/api/geocode/json?latlng=".$lat.",".$lng."&sensor=false&key=".$apiKey;
        $ch 		= 	curl_init();
        curl_setopt($ch, CURLOPT_URL, $url);
        curl_setopt($ch, CURLOPT_RETURNTRANSFER, 1);
        curl_setopt($ch, CURLOPT_PROXYPORT, 3128);
        curl_setopt($ch, CURLOPT_SSL_VERIFYHOST, 0);
        curl_setopt($ch, CURLOPT_SSL_VERIFYPEER, 0);
        curl_setopt($ch, CURLOPT_ENCODING, '');
        curl_setopt ($ch, CURLOPT_FOLLOWLOCATION, true);

        $response = curl_exec($ch);
        //print_r($response);
        curl_close($ch);
        $response_a = json_decode($response);
        if(!empty($response_a->results) && $response_a->status == "OK"){
            $address   =   $response_a->results[0]->formatted_address;
        }
        return $address;
    }

	function deg2rad($deg){
	  return $deg * (pi()/180);
	}

	function distance($lat1,$lon1,$lat2,$lon2){
  		$r 		= 	6371;
	  	$dLat 	= 	$this->deg2rad($lat2-$lat1);
	  	$dLon 	= 	$this->deg2rad($lon2-$lon1); 
	  	$a 		= 	sin($dLat/2) * sin($dLat/2) + cos($this->deg2rad($lat1)) * cos($this->deg2rad($lat2)) *  sin($dLon/2) * sin($dLon/2); 
	  	$c 		= 	2 * atan2(sqrt($a), sqrt(1-$a)); 
	  	$d 		=	$r * $c;
	  	return $d;
	}

    function calculate_distace_travel($date,$user){
		$data['date'] 		=	$date;
		$data['user_id'] 	= 	$user;
			$resultData		=	$this->Loginreport_model->get_lat_long_by_user_date($data);
			$x = 0;
			for($i = 0; $i<count($resultData);$i++){

				if($i<count($resultData)-1){
					$sourceLat	=	$resultData[$i]['latitude'];
					$sourceLong	=	$resultData[$i]['longitude'];
					$distLat	=	$resultData[$i+1]['latitude'];
					$distLong	=	$resultData[$i+1]['longitude'];
					$x = $x + $this->distance($sourceLat, $sourceLong, $distLat, $distLong);
				}
			}
		return number_format((float)$x, 2, '.', '');
	}

	public function get_login_records_by_date(){
		header('Content-Type: application/json');
		$from_date 	=	$this->input->get('fromDate');
		$to_date 	= 	$this->input->get('toDate');

		$parent_path = 	$this->session->userdata['logged_web_user']['userParentPath']."-".$this->session->userdata['logged_web_user']['userId'];

		$lgnrlist 	 =	$this->Loginreport_model->get_login_records_by_date($from_date, $to_date, $parent_path);
		

		$c = count($lgnrlist);

		echo '[';

			for($i=0;$i<$c;$i++){

				if($lgnrlist[$i]['lgnrLogoutDate'] == "" || $lgnrlist[$i]['lgnrLogoutDate'] == null){
					$total_time = 'NA';
				}
				else{
					$date1  =   new DateTime($lgnrlist[$i]['lgnrLoginDate'].'T'.$lgnrlist[$i]['lgnrLoginTime'].':00');
					$date2  =   new DateTime($lgnrlist[$i]['lgnrLogoutDate'].'T'.$lgnrlist[$i]['lgnrLogoutTime'].':00');

					$diff   =   $date2->diff($date1);

					$hours      =   $diff->h;
					$minutes    =   $diff->format('%i');
					$hours      =   $hours + ($diff->days*24);
					$total_time =   $hours. ' hours and '.$minutes.' minutes';
	                                
				}
	            
	            //Check User Is On Leave by Soumyajeet                
	            $todayDate   		= 	date('Y-m-d');
	            $todayDate   		= 	date('Y-m-d', strtotime($todayDate));                
	            $leaveDateBegin 	= 	date('Y-m-d', strtotime($lgnrlist[$i]['lreqDateFrom']));
	            $leaveDateEnd 		=	date('Y-m-d', strtotime($lgnrlist[$i]['lreqDateTo']));
	            if ((($todayDate >= $leaveDateBegin) && ($todayDate <= $leaveDateEnd)) && $lgnrlist[$i]['lreqStatus'] == 'accepted'){
	                $leaveMessage   =   "On Leave";
	            }
	            else{
	                $leaveMessage   =   "Present";
	            }
	            
				$data = array(
					'lgnrSNo'           =>  $i+1,
					'lgnrUserName'      =>  $lgnrlist[$i]['usrUserName'],
					'lgnrLoginDate'     =>  $lgnrlist[$i]['lgnrLoginDate'],
					'lgnrLoginTime'     =>  $lgnrlist[$i]['lgnrLoginTime'],
					'lgnrLogoutDate'    =>  $lgnrlist[$i]['lgnrLogoutDate'],
					'lgnrLogoutTime'    =>  $lgnrlist[$i]['lgnrLogoutTime'],
					'lgnrKmTravel'		=>	$this->calculate_distace_travel($lgnrlist[$i]['lgnrLoginDate'],$lgnrlist[$i]['lgnrUserId']),
					'lgnrTotalTime'     =>  $total_time,
					'lgnrLeaveMessage'  =>  $leaveMessage,
	                'loginLocation'     =>  $this->addressFromLatLong($lgnrlist[$i]['lgnrLoginLat'], $lgnrlist[$i]['lgnrLoginLong']),
					'lgnrLoginStatus'   =>  $lgnrlist[$i]['lgnrLoginStatus']
				);

				$json = json_encode($data);

				echo $json;

	            if($c-1!=$i){
					echo ",";
				}

			}
		echo ']';
	}

	public function get_all_users(){
		header('Content-Type: application/json');
		$parent_path = $this->session->userdata['logged_web_user']['userParentPath']."-".$this->session->userdata['logged_web_user']['userId'];
		$appuserlist = $this->App_user_model->get_all_app_users($parent_path);

		$data = array();

		$c=count($appuserlist);
		echo '[';


		for($i=0;$i<$c;$i++){

			$data = array(
				'usrId' => $appuserlist[$i]['usrId'],
				'usrUserName' => $appuserlist[$i]['usrUserName'],
			);

			$json = json_encode($data);

			echo $json;

            if($c-1!=$i){
				echo ",";
			}

		}
		echo ']';
	}
}